openapi: 3.0.3
info:
  title: Swagger ECOMM - OpenAPI 3.0
  description: API usada para curso da Alura Level Up - Next Dev
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://localhost:3000
tags:
  - name: category
    description: Categorias de produtos 
  - name: product
    description: Produtos
paths:
  /api/categories:
    get:
      tags:
        - category
      summary: Get all categories
      description: Retorna todas as categorias com nome e status
      operationId: findCategories
      responses: 
        '200':
          description: SUCESSO!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categories"
        '404':
          description: Nenhuma categoria encontrada
          content:
            application/json:
              example: "Not Found"
  /api/categories/{id}:
    get:
      tags:
        - category
      summary: Get one category
      description: Retorna uma categoria especifica
      operationId: findCategoryById
      parameters:
        - name: id
          in: path
          description: id da categoria
          required: true
          schema:
            type: string
      responses:
        '200':
          description: SUCESSO!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/category"
        '404':
          description: Nenhuma categoria encontrada
          content:
            application/json:
              example: "Not Found"        
  /api/admin/categories:
    post:
      tags:
        - category
      summary: Create one category
      description: Cria uma categoria com nome e status
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createCategory"
      responses:
        '201':
          description: Categoria criada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/category"
        '404':
          description: Erro ao criar categoria
          content:
            application/json:
              example: "Not found"
  /api/admin/categories/update/{id}:
    put:
      tags:
        - category
      summary: Update a category
      description: Atualiza uma categoria
      operationId: updateCategory
      parameters:
        - name: id
          in: path
          description: id da categoria
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createCategory"
      responses:
        '200':
          description: Categoria atualizada!!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/category"
        '404':
          description: Categoria não encontrada
          content:
            application/json:
              example: "Not found"
        '400':
          description: Requisição mal formatada
          content:
            application/json:
              example: "Bad Request"
  /api/admin/categories/remove/{id}:
    delete:
      tags:
        - category
      summary: Remove a category
      description: Remove uma categoria
      operationId: deleteCategory
      parameters: 
        - name: id
          in: path
          description: id da categoria
          required: true
          schema:
            type: string
      responses:
        '200': 
          description: Categoria removida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/category"
        '404':
          description: Categoria não encontrada
          content:
            application/json:
              example: "Not found"
        '400':
          description: Requisição mal formatada
          content:
            application/json:
              example: "Bad Request"
  /api/admin/categories/active/{id}:
    put:
      tags:
        - category
      summary: Active a category
      description: Ativa uma categoria já existente
      operationId: activeCategory
      parameters:
        - name: id
          in: path
          description: id da categoria
          required: true
          schema:
            type: string
      responses:
        '200': 
          description: Categoria ativada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/category"
        '404':
          description: Categoria não encontrada
          content:
            application/json:
              example: "Not found"
        '400':
          description: Requisição mal formatada
          content:
            application/json:
              example: "Bad Request"      
  /api/products:
    get:
      tags:
        - product
      summary: Get all products
      description: Retorna todos os produtos
      operationId: findProduts
      responses: 
        '200':
          description: SUCESSO!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/products"
        '404':
          description: Nenhum produto encontrado
          content:
            application/json:
              example: "Not Found"
  /api/products/{id}:
    get:
      tags:
        - product
      summary: Get one product
      description: Retorna um produto especifico
      operationId: findProductById
      parameters:
        - name: id
          in: path
          description: id do produto
          required: true
          schema:
            type: string
      responses:
        '200':
          description: SUCESSO!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        '404':
          description: Nenhum produto encontrado
          content:
            application/json:
              example: "Not Found"     
  /api/admin/products:
    post:
      tags:
        - product
      summary: Create one product
      description: Cria um produto
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createProduct"
      responses:
        '201':
          description: Produto criado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        '404':
          description: Erro ao criar produto
          content:
            application/json:
              example: "Not found"
  /api/admin/products/update/{id}:
    put:
      tags:
        - product
      summary: Update a product
      description: Atualiza um produto
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: id do produto
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createProduct"
      responses:
        '200':
          description: Produto atualizado!!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        '404':
          description: Produto não encontrado
          content:
            application/json:
              example: "Not found"
        '400':
          description: Requisição mal formatada
          content:
            application/json:
              example: "Bad Request"
  /api/admin/products/remove/{id}:
    delete:
      tags:
        - product
      summary: Remove a product
      description: Remove um produto
      operationId: deleteProduct
      parameters: 
        - name: id
          in: path
          description: id do produto
          required: true
          schema:
            type: string
      responses:
        '200': 
          description: Produto removido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        '404':
          description: Produto não encontrado
          content:
            application/json:
              example: "Not found"
        '400':
          description: Requisição mal formatada
          content:
            application/json:
              example: "Bad Request"
components:
  schemas:
    category:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        status:
          type: string
    categories:
      type: array
      items:
        $ref: "#/components/schemas/category"
    createCategory:
      type: object
      properties:
        nome: 
          type: string
        status: 
          type: string
    product:
      type: object
      properties:
        _id:
          type: string
        nome:
          type: string
        descricao:
          type: string
        slug:
          type: string
        preco:
          type: number
        estoque:
          type: integer
        categoria:
          type: string
    products:
      type: array
      items:
        $ref: "#/components/schemas/product"
    createProduct:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
        slug:
          type: string
        preco:
          type: number
        estoque:
          type: integer
        categoria:
          type: string